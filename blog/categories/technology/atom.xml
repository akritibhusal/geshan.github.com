<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: technology | Geshan's Blog]]></title>
  <link href="https://geshan.com.np/blog/categories/technology/atom.xml" rel="self"/>
  <link href="https://geshan.com.np/"/>
  <updated>2019-07-08T05:46:17+00:00</updated>
  <id>https://geshan.com.np/</id>
  <author>
    <name><![CDATA[Geshan Manandhar]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Podcasts Every Software Engineer/developer Should Subscribe To - Part 4]]></title>
    <link href="https://geshan.com.np/blog/2019/07/podcasts-every-software-engineer-slash-developer-should-subscribe-to-part-4/"/>
    <updated>2019-07-08T04:58:14+00:00</updated>
    <id>https://geshan.com.np/blog/2019/07/podcasts-every-software-engineer-slash-developer-should-subscribe-to-part-4</id>
    <content type="html"><![CDATA[<p>Podcasts are a great way to learn new things even for the lazy reader. If you are not fast at reading or don&rsquo;t like it very much podcasts can be your way to get the information with less effort. It is easier than reading. This is a part 4 in the series (do check part <a href="http://geshan.com.np/blog/2015/10/3-podcasts-every-software-engineer-slash-developer-should-subscribe-to/">1</a> and
<a href="http://geshan.com.np/blog/2016/05/3-podcasts-every-software-engineer-slash-developer-should-subscribe-to-part-2/">2</a> and <a href="https://geshan.com.np/blog/2017/01/3-podcasts-every-software-engineer-slash-developer-should-subscribe-to-part-3/">3</a>) of podcasts you must subscribe to and listen to as a software engineer. Same as the last 3 times the 3 podcasts listed below have great content and considerably good sound quality too. Below is the list:</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/3-podcasts-part-4/3-podcasts-sw-eng-part-04.jpg" title="3 podcasts every software engineer should subscribe to - part 4" alt="3 podcasts every software engineer should subscribe to - part 4"></p>

<!-- more -->


<h2><a href="https://spec.fm/podcasts/developer-tea">Developer Tea by Jonathan</a></h2>

<p>Developer Tea is an exceptional podcast to listen to. Jonathan sometimes does interview and most of the times it is a discoure on a software engineering related topics. A recect episode on <a href="https://spec.fm/podcasts/developer-tea/302953">Mid-Year Resoulutions</a> was a strong reminder that half of the year is gone and in less than six months we will reach 2020.</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/3-podcasts-part-4/developer-tea.jpg" title="Developer Tea Podcast" alt="Developer Tea Podcast"></p>

<h2><a href="http://agilenoir.biz/agilethoughts/">Agile Thoughts by Agile Noir</a></h2>

<p>Simply put Agile thought is an unconventional podcast. Don&rsquo;t be scared by the unusual looking cover of the podcast, the content is good. Mostly converational with some characters, the episodes are short and address day to day issues. I remember episoide 29 <a href="https://agilenoir.biz/podcast/029-the-value-tdd-gives-to-leadership/">The value TDD gives to leadership</a> being an intriguing one.</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/3-podcasts-part-4/agile-thoughts.jpg" title="Agile Thoughts Podcast" alt="Agile Thoughts Podcast"></p>

<h2><a href="https://www.intercom.com/blog/podcasts/">Inside Intercom</a></h2>

<p>Inside intercom is a superb podcast focusing on the product side of things rather than just the technical aspects. The most recent episode on <a href="https://www.intercom.com/blog/podcasts/josh-seiden-on-why-product-teams-should-focus-on-outcome-vs-output/">why product teams should focus on outcomes over output</a> was an eye opener.</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/3-podcasts-part-4/inside-intercom.jpg" title="Inside Intercom Podcast" alt="Inside Intercom Podcast"></p>

<h2>Conclusion</h2>

<blockquote><p>I hope you continue your learining journey with the above interesting podcasts. Keep learning!</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Logging best practices to get the most out of application level logging -- Slides]]></title>
    <link href="https://geshan.com.np/blog/2019/03/follow-these-logging-best-practices-to-get-the-most-out-of-application-level-logging-slides/"/>
    <updated>2019-03-26T09:02:43+00:00</updated>
    <id>https://geshan.com.np/blog/2019/03/follow-these-logging-best-practices-to-get-the-most-out-of-application-level-logging-slides</id>
    <content type="html"><![CDATA[<p>Logs from the application level are the only way your application talks back to you. Having proper logs with commendable search capabilities is like having a torch in a dark room.</p>

<p>Fully exploiting logs in case of any issues is very underrated. We as software engineers can utilize logs from the application to resolve issues as well as know the general health of the application.</p>

<blockquote><p>Logs can be instrumental to profile application performance too.</p></blockquote>

<p>I had written about <a href="https://geshan.com.np/blog/2015/08/importance-of-logging-in-your-applications/">logging</a> some years back too. This post is focused on best practices you can follow when logging from the application level and how it can help you as a software engineer.</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" title="what recruiters look for" alt="what recruiters look for" data-echo="/images/logging-best-practices/logging-bp.jpg"></p>

<!-- more -->


<h2>Best practices at a glace</h2>

<p>Following are the main best practices for logging:</p>

<h3>1. Log information optimally</h3>

<p>Too much information is noise and too less information is inadequate. It is difficult to strike the balance of how much log is optimal but that is the challenge. In the case of microservices also think about traceability between services like using a unique request identifier. Another thing to keep in mind is logs are temporal, not permanent. As they are not stored in the database they usually have a life from some days to some weeks.</p>

<h3>2. Always follow severity levels</h3>

<p>An emergency means your on-call phone is going to ring at 2 AM in the morning but an info severity is something that won’t bother anyone. You have to agree as a team on some set standards like the <a href="https://tools.ietf.org/html/rfc5424">syslog one</a>.</p>

<h3>3. Structure your logs</h3>

<p>Have a structure in your log lines, like have a message and a context array to add more information about the message. Follow an agreed upon JSON standard for logging. This makes it easy to parse and search. You could even set more rules like the date is mandatory, a description cannot be more than 255 characters, extra information goes in the context. Having these simple rules makes it easier to find the log when in need. It is highly recommended to provide context with log lines like add the details of the order (things that are not sensitive of course) when logging that the order could not be shipped for instance.</p>

<h3>4. Write logs carefully  (don’t hamper performance)</h3>

<p>Make sure that adding logs does not add a lot of extra milliseconds to your response times. As far as possible write logs in an async way, logs could even be written locally in a log file and shipped using a log shipper to the service of your choice. You can also make use of tried and trusted library depending on the language/framework you are working with. Using queues could also be an option to ship logs but keep in mind the possible lag when viewing logs.</p>

<h3>5. Use the right tools for the job</h3>

<p>The tools and services you choose to ship, view, search and sort logs are your team’s choice. Depending on the budget, the appetite for using external services a team could use a fully self-managed stack like <a href="https://www.elastic.co/elk-stack">ELK</a>/<a href="https://www.graylog.org/">Graylog</a> or go full SAAS with services like <a href="https://logentries.com">Logentries</a>/<a href="https://sematext.com/logsene/">Sematext Logsense</a>. The main idea is to use the tools that fit your needs very efficiently. If you need almost real-time logs using a queue, for instance, might not be the best decision. So design your logging infrastructure and stack that fits your needs well.</p>

<h2>The slides</h2>

<p>I had done a talk at my workplace in February about “Logging best practices” and the slides from the talk are below:</p>

<script async class="speakerdeck-embed" data-id="4f33e89002cc4a29926808ef42457fc2" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"></script>


<p>You can view the slides on <a href="https://www.slideshare.net/geshan/logging-best-practices">slideshare</a> and <a href="https://speakerdeck.com/geshan/logging-best-practices">speaker deck</a> too.</p>

<h2>Conclusion</h2>

<blockquote><p>If a dog is a man’s best friend, logs are software engineer&rsquo;s best friend.</p></blockquote>

<p>Use logs to the fullest to get the most out of it and keep in mind the best practices about logging.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Things tech recruiters look for in your resume and the first interview]]></title>
    <link href="https://geshan.com.np/blog/2019/01/things-tech-recruiters-look-for/"/>
    <updated>2019-01-17T10:20:29+00:00</updated>
    <id>https://geshan.com.np/blog/2019/01/things-tech-recruiters-look-for</id>
    <content type="html"><![CDATA[<p>Have you ever applied to many tech jobs that suit your experience and skill but never heard back? Does it feel like you are sending your resume to a black hole? Then this is something you absolutely must read. In this post, 3 tech recruiters in Sydney, Australia answer what they look for in a resume/candidate profile. They also open up about top 3 things they evaluate while conducting the first interview.</p>

<blockquote><p>After you know what the tech recruiters are looking for you can tailor your resume that lands you an interview.</p></blockquote>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" title="what recruiters look for" alt="what recruiters look for" data-echo="/images/tech-recruitment-aus/for-hire.jpg"></p>

<!-- more -->


<p>2019 started less than 3 weeks ago and I have seen many new tech roles open up. You can also read through <a href="https://geshan.com.np/blog/2018/09/7-practical-steps-to-land-your-first-tech-job/" title="Steps to land your first tech job">practical step to land a tech job</a> and get an edge over your competition on your job hunt. I have also compiled a <a href="https://github.com/geshan/au-companies-providing-work-visa-sponsorship" title="Companies in Austalia providing visa sponsorship for tech roles">list</a> of companies in Australia that provide work visa sponsorship. Of course, it depends a lot on the role and the candidate too.</p>

<h2>Purpose of the CV/Resume</h2>

<p>What is the purpose of your resume? In my opinion, the main purpose of your resume is to land you the first interview.</p>

<blockquote><p>So, craft your resume to cater your audience very well. Then it is up to you to prove yourself worthy for the second interview up-to-the job offer stage.</p></blockquote>

<p>For initial review, you can run your CV through <a href="https://cvcompiler.com/" title="Tech CV review powered by NLP and data insights">CVCompiler.com</a> (has a free or paid version). I have found it to be quite helpful for tech-related CVs.</p>

<h2>Initial interview</h2>

<p>Initial screening interview by a tech recruiter is generally done over phone or audio/video conference. This helps filter out candidates that are not the best cultural fit or even small things like &ldquo;Can the candidate speak good English?&rdquo;.</p>

<blockquote><p>First interviews are generally short and not technical.</p></blockquote>

<p>It is like the entry of the funnel and getting past the initial interview should not be that difficult.</p>

<h2>What recruiters look for?</h2>

<p>I asked 3 internal tech recruiters in Sydney, Australia the following 3 simple questions:</p>

<ol>
<li>How many resumes/candidate profiles do you go through in a day usually?</li>
<li>What are the things you look for in a resume sent for a technical role?</li>
<li>What are the top 3 things you evaluate in a candidate when conducting the first interview?</li>
</ol>


<p>Read on to find out what they had to say about tech recruitment as an internal tech recruiter:</p>

<h2>The Answers</h2>

<p>I asked the above 3 questions to Cloë Stanbridge (Safety Culture), James Richardson (Quantium) and Kevin Yoon (SiteMinder). Below are their answers:</p>

<h3>Cloë Stanbridge (Safety Culture) looks for tech and soft skills</h3>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" title="Cloe from Safety Culture" alt="Cloe from Safety Culture" data-echo="/images/tech-recruitment-aus/cloe.jpg"></p>

<p><a href="https://www.linkedin.com/in/cloestanbridge/" title="Cloë on LinkedIn">Cloë Stanbridge</a> has been working for <a href="https://safetyculture.com/" title="Safety culture website">Safety Culture</a> for almost 2 years now. She is currently the Talent Acquisition manager there. Safety Culture&rsquo;s mission is &ldquo;to help companies achieve safer and higher quality workplaces all around the world through innovative, low-cost mobile first products.&rdquo;</p>

<blockquote><p>Safety Culture has multiple <a href="https://safetyculture.com/jobs/" title="Jobs at safety culture">open roles</a> as of now.</p></blockquote>

<p>It has 5 offices around the world with 2 of them in Australia. Cloë expressed her point of view about the above question the following way:</p>

<h4>How many resumes/candidate profiles do you go through in a day usually?</h4>

<p>This can vary due to the volume of roles I have on hand but on an <strong>average about 10 a day</strong>.</p>

<h4>What are the things you look for in a resume sent for a technical role?</h4>

<p>Education, longevity and <strong>growth in their career</strong> is something I focus on. I also look into if the candidate has <strong>worked for a product/SaaS company</strong>. This helps me evaluate that they are used to iterating, Continuous Integration (CI) and <strong>are focused on quality rather than being constrained by budget or time.</strong></p>

<p>Candidates who have worked in cross-functional teams is a plus. They don&rsquo;t need to have all of these things but scoring on most of them would warrant them an interview. Grammar/spelling mistakes is also a <strong>big no</strong>.</p>

<h4>What are the top 3 things you evaluate in a candidate when conducting the first interview?</h4>

<ol>
<li><strong>Communication</strong>: This is not just the ability to speak English but being able to explain technical terms to a non-technical person earns brownie points for the candidate.</li>
<li><strong>Passion and interest for their craft</strong>: I would check if they have a side project. Learning something new in their free time would result in a better rating. The questions they ask hints to me about their passion for what they do.</li>
<li><strong>How interested are they in the problems that we are solving</strong>: I would also evaluate if they just want &ldquo;a&rdquo; job or do they actually want to work for this company. This would also include being excited for the learning opportunity they would get at work.</li>
</ol>


<p>She was quite precise about the things she would look for in the CV and the candidate in the first interview.</p>

<h3>James Richardson (Quantium) seeks alignment to JD and aptitude</h3>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" title="James, currently working at Quantium" alt="James, currently working at Quantium" data-echo="/images/tech-recruitment-aus/james.jpg"></p>

<p><a href="https://www.linkedin.com/in/jamesrichardsonrecruitment/" title="James on LinkedIn">James</a> has been associated with <a href="https://www.quantium.com/" title="Quantium website">Quantium</a> for almost 2 and a half years. Currently, he is the &ldquo;Lead Recruitment Business Partner&rdquo; at Quantium, he is also the co-organizer of <a href="https://www.meetup.com/node-sydney/" title="Node Sydney Meetup group">Node Sydney Meetup</a>. Quantium is a consulting firm working in multiple domains and has multiple products, with a focus on Data Science and Artificial Intelligence. With 4 office location in Australia, Quantium has a total of 9 offices all over the world.</p>

<blockquote><p>They are also <a href="https://www.quantium.com/careers/" title="Quantium careers page">looking</a> for talented tech people like you.</p></blockquote>

<p>James answered the above questions as follows:</p>

<h4>How many resumes/candidate profiles do you go through in a day usually?</h4>

<p>It really varies. In peak times, I could be screening anywhere between 50-250 per day depending on the role. For software orientated roles, these numbers reduce sharply. Looking at my current data,
<strong>a recurring Backend role that is constantly advertised will attract around 40 applications per week</strong>, with a spike on Tuesdays.</p>

<h4>What are the things you look for in a resume sent for a technical role?</h4>

<p>It all depending on the nature of the vacancy. <strong>I tend to align to the JD “as much as possible”</strong>. The wishlist on the JD usually turns out to be just a &ldquo;wishlist&rdquo;. I’ll focus on the core of the position. Generally, I’m looking for the following things:
  * Right to work in Australia: <strong>If this is a role we can sponsor/relocate, then usually I just blast straight past this.</strong></p>

<ul>
<li><p>Experience in tech: <strong>A huge amount of newbies will apply for senior/lead roles and I will typically refer them to our graduate entry.</strong> If they have some experience, I’ll log them under potential future candidate for a more junior position. I pay attention to what they have delivered previously.</p></li>
<li><p>Last company: This helps boost the candidate&rsquo;s ranking. <strong>Anyone working for a top tier engineering company is going to get a lot of attention.</strong> The best first stage assessment confidence bearing is having another reputable company do that assessment. If I find a candidate working for a company with strong engineering credibility, it is going to give me a high degree of confidence in them.</p></li>
<li><p>Tech relevance: I would check if have they been working in the tech stack we use? For instance functional programming vs web dev. <strong>It will be hard to argue for a JS dev applying for a backend Scala functional role without significant side projects/open source work</strong> (yes this happens).</p></li>
<li><p>Meeting in person: Do I know them or have I met them counts too. If I Know people at their company that helps as well. <strong>Have I met them at a meetup?</strong></p></li>
</ul>


<h4>What are the top 3 things you evaluate in a candidate when conducting the first interview?</h4>

<ol>
<li><strong>Attitude</strong>: A positive attitude always leaves a good impression.</li>
<li><strong>Aptitude</strong>: How well does the candidate understand concepts and processes. I don’t have the skills to check code but they should have the ability to code well.</li>
<li><strong>Communication</strong>: I would evaluate how easy is it to talk to the candidate. Their ability to understand new things matter as well. Another deciding factor is would I be excited to meet this candidate in person?</li>
</ol>


<p>He adds &ldquo;Essentially, being an in-house recruiter is about credibility. We LOVE hiring people, it’s what drives us to do the job. <strong>We also need to establish that internal credibility to be successful.</strong>&rdquo; I must add he was pretty elaborate with his answers :) especially the 2nd question.</p>

<h3>Kevin Yoon values experience and ability to change</h3>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" title="Kevin, currently employed at Siteminder" alt="Kevin, currently employed at Siteminder" data-echo="/images/tech-recruitment-aus/kevin.jpg"></p>

<p><a href="https://www.linkedin.com/in/simplified/" title="Kevin Yoon on LinkedIn">Kevin</a> has been employed at <a href="https://www.siteminder.com/" title="SiteMinder website">SiteMinder</a> for the past 4 months as the &ldquo;Talent Acquisition Lead - Tech &amp; Product&rdquo;. SiteMinder is a SaaS company working in the hospitality industry with a focus on online booking and related things.</p>

<blockquote><p>They have a physical presence in <a href="https://www.siteminder.com/contact/" title="SiteMinder contact page">5 continents</a> and are hiring for multiple <a href="https://www.siteminder.com/jobs/" title="SiteMinder jobs page">roles</a>. It includes some tech roles too.</p></blockquote>

<p>Kevin shared his opinions the following way:</p>

<h4>How many resumes/candidate profiles do you go through in a day usually?</h4>

<p>I review all applicant and referral CVs that have come through overnight. This <strong>varies between 20 to 50 CVs per day</strong> depending on the number of roles we have publicly advertised and announced internally.</p>

<h4>What are the things you look for in a resume sent for a technical role?</h4>

<p>First, it is <strong>matched against the job description and the job briefing</strong>. For mid-level and senior engineers, I focus on the most recent <strong>3 to 5 years of work experience</strong> and any relevant personal projects or initiatives in that period.</p>

<p>Any mentoring or hackathons attended are good signs. If the candidate has given talks at meetups or conferences that is a plus too. I also look for coaching experiences in the past 3 to 5 years. I evaluate the actual tech stacks used by the candidate and the context it was utilized in.</p>

<p>I take a deeper look at how the candidate built solutions with the tools available. The candidate’s role in the projects done as an individual contributor or within a team context is important too. <strong>Changes in tech used in each role/project</strong> through their progression also catches my eye.</p>

<h4>What are the top 3 things you evaluate in a candidate when conducting the first interview?</h4>

<ol>
<li>I would seek their <strong>motivation for change</strong> in relation to the salary they command in their respective roles. I try to elicit factors that inspire them for a change in addition to money.</li>
<li>I also look for the candidate&rsquo;s ability to handle <strong>rapid change and criticism</strong> of their skills.</li>
<li>Finally, I attempt to find out their <strong>expectation from their manager</strong>. I also intend to assess the environment which brings out their best performance.</li>
</ol>


<p>Kevin was to the point and expressed his views concisely. He has highlighted some things that would generally skip your mind as a person applying for a tech position. Be ready to explain your motivation for a job change in your next interview.</p>

<h2>Conclusion</h2>

<p>I would like to thank all 3 internal tech recruiters for their time and the valuable information they have provided. I hope you have extracted out the &ldquo;inside stuff&rdquo; from the above answers. Now, I think you will start editing your CVs to mention the impact and craft it to be a tool to land more interviews.</p>

<blockquote><p>Similarly, you can also be well prepared for the first interview and ace it.</p></blockquote>

<p>Wish you all the best for your job hunt in Australia!</p>

<p>Share your thoughts and experience of finding a job in Australia. Have you found a role that makes you career high?</p>

<hr />

<p>PS: I might do a part 2 of this :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting started with debugging nodeJs applications with ndb]]></title>
    <link href="https://geshan.com.np/blog/2019/01/getting-started-with-debugging-nodejs-applications-with-ndb/"/>
    <updated>2019-01-06T00:02:36+00:00</updated>
    <id>https://geshan.com.np/blog/2019/01/getting-started-with-debugging-nodejs-applications-with-ndb</id>
    <content type="html"><![CDATA[<p>NodeJs was released almost 9 years ago. The <a href="https://nodejs.org/api/debugger.html" title="Default nodejs debugging process">default debugging process</a> of NodeJs (read Node.js) is quite clumsy. You are already aware of the need to add <code>--inspect</code> to the node script with node inspector. It is also dependent on chrome. Then look at the proper web socket connection which is hard and debug using chrome node debugger. To be honest, it is a pain in the neck.</p>

<p>Finally, Google chrome labs has released ndb, which they say is &ldquo;An improved debugging experience for Node.js, enabled by Chrome DevTools&rdquo;. It is a boon to debug a nodejs app.</p>

<p>I am going to show a step by step process of debugging nodejs application with <a href="https://github.com/GoogleChromeLabs/ndb" title="ndb github page">ndb</a>. In other words, you will learn how to debug a nodejs application using ndb. Below you can see it in action, let&rsquo;s roll up your sleeves and get started:</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" title="debugging nodeJs applications" alt="debugging nodeJs applications" data-echo="/images/debugging-node-js/00ndb.png"></p>

<!-- more -->


<h2>Prerequisites for debugging nodejs application</h2>

<p>Below are some prerequisites before you get started:</p>

<ol>
<li>You have nodejs installed on your system (a no-brainer but still worth a mention)</li>
<li>You have general knowledge of running node scripts and working with nodejs apps.</li>
<li>You have prior debugging experience with nodejs or any other language.</li>
</ol>


<p>For debugging nodejs application in place of just another script I will use a full nodejs express application. It is an open source application I used for a demo on testing nodejs application.</p>

<h2>Debugging nodejs express application as a demo</h2>

<p>I am using my opensource <a href="https://github.com/geshan/currency-api" title="Currency API app on github">currency API</a> for this step-by-step getting started of debugging a nodejs application. It is built using express js framework. You can also check the running app hosted on <a href="https://currency-api-nodejs.now.sh/api/convert/USD/AUD/2019-01-01" title="Currency API app hosted on Zeit now">Zeit Now</a> to see the USD to AUD rate of 2019-01-10 as an example.</p>

<p>The idea of the application is simple. If the conversion rate is available in the database it will fetch it from the database. If not it will fetch it from another API and send it back to the user also saving the rate in the database at the same time (async) for later use.</p>

<p>You can clone the application from github and run <code>npm install</code> to get it ready for debugging. This is a very simple application with most of the logic in <code>exchangeRates.js</code> <a href="https://github.com/geshan/currency-api/blob/master/src/exchangeRates.js" title="You can have a look at the code on github">file</a>. It has mocha <a href="https://github.com/geshan/currency-api/blob/master/test/exchnageRatesTest.js" title="You can check the test too">tests</a> too as it was a demo for testing nodejs application.</p>

<h3>1. Getting started, install ndb</h3>

<p>Installing ndb is very easy. All you need to do to get started with debugging your nodejs application is to install <a href="https://github.com/GoogleChromeLabs/ndb#installation" title="ndb installation instructions on github">ndb</a>. I would suggest to install it globally with:</p>

<pre><code># with npm
npm install -g ndb

#with yarn
yarn global add ndb
</code></pre>

<p>You can also install and use it locally per app if you want. One thing I had to fix was to get the latest version of chrome as I saw some permission issues.</p>

<h3>2. Run the app with ndb (not node or nodemon)</h3>

<p>For debugging nodejs applications using ndb you can directly run the nodejs app script with it rather than node. For example, if you were used to doing <code>node index.js</code> or <code>nodemon index.js</code> in development. To debug your app you can run:</p>

<pre><code>ndb index.js
</code></pre>

<p>Notice that you don&rsquo;t need to put any <code>-- inspect</code> so the experience is a lot smoother.</p>

<blockquote><p>You don&rsquo;t need to remember a different port or go to chrome devtools and open up a different inspector window to debug. Such a relief!</p></blockquote>

<p>ndb opens up a screen like below when you do <code>ndb .</code> or <code>ndb index.js</code>:</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" title="debugging nodeJs applications" alt="debugging nodeJs applications" data-echo="/images/debugging-node-js/01ndb-index.png"></p>

<p>Please add a breakpoint on line 46. As you ran the application with ndb it will run in debug mode and stop at the breakpoint like below when you hit <code>http://localhost:8080/api/convert/USD/AUD/2019-01-01</code> on the browser. I have set the breakpoint on exchangeRates.js like 46 in the screenshot below:</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" title="Pausing at the break-point while debugging" alt="debugging nodejs" data-echo="/images/debugging-node-js/02ndb-pause.png"></p>

<p>ndb allows you to run any script for debugging. For example, I can run <code>ndb npm start</code> and it will use the nodemon run. This means I can debug the application while changing the code which is great.</p>

<blockquote><p>As an example it can be run with <code>ndb npm start</code> to debug this nodejs express application.</p></blockquote>

<p>You can also debug your test with a command like <code>ndb npm test</code>.</p>

<h3>3. Let&rsquo;s debug some code</h3>

<p>As the debugger is working I can place more break points or run through the code at my speed and convenience.</p>

<blockquote><p>The essential shortcuts are <code>F10</code> to step over function call and <code>F11</code> to step into a function.</p></blockquote>

<p>The usual debugging workflow I assume you are familiar with. below I have advanced to line 52:</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" title="Continuing further the break-point while debugging" alt="debugging node.js" data-echo="/images/debugging-node-js/03ndb-continue.png"></p>

<h2>More debugging nodejs things</h2>

<p>As any other debugger with ndb you can:</p>

<ol>
<li>Add watches</li>
<li>Check the call stack trace</li>
<li>Check the process</li>
</ol>


<blockquote><p>The console tab is also helpful if you want to some quick nodejs code in the context.</p></blockquote>

<p>Read more about what you can do with it in the official <a href="https://github.com/GoogleChromeLabs/ndb#what-can-i-do" title="ndb readme what can I do section">readme</a>. Below is a screenshot of the useful console:</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" title="ndb console is useful for debugging nodejs apps" alt="ndb console is useful for debugging nodejs apps" data-echo="/images/debugging-node-js/04ndb-console.png"></p>

<h2>Conclusion (TLDR)</h2>

<p>Debugging nodejs application with ndb is a better developer experience compared to the default debugger. To debug the currency API nodejs express app with it you run do the following commands give you have node > 8 installed:</p>

<ol>
<li>npm install -g ndb</li>
<li>git clone git@github.com:geshan/currency-api.git</li>
<li>cd currency-api</li>
<li>npm install</li>
<li>ndb npm start</li>
<li>After the ndb debugger opens up add a breakpoint at line 46 of src/exchangeRates.js</li>
<li>Then open <code>http://localhost:8080/api/convert/USD/AUD/2019-01-01</code> in the browser</li>
<li>Now as the app should pause at the breakpoint, Enjoy! and continue debugging.</li>
</ol>


<p>If it works for this app, you can debug any of your nodejs application with this approach.</p>

<blockquote><p>Welcome to the new way of debugging nodejs application that is browser independent and a lot more smoother than the default experience. Step up your debugging nodejs application game.</p></blockquote>

<p>I hope this post has helped you debug your nodejs application better. If you have any other things to share about debugging nodejs apps or better usage of ndb please comment below!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2018 in review: 5 most viewed posts of this year]]></title>
    <link href="https://geshan.com.np/blog/2018/12/2018-in-review-5-most-viewed-posts-of-this-year/"/>
    <updated>2018-12-25T07:55:50+00:00</updated>
    <id>https://geshan.com.np/blog/2018/12/2018-in-review-5-most-viewed-posts-of-this-year</id>
    <content type="html"><![CDATA[<p>I have never done this in the past 11 years of blogging, this time it is going to be different. I am listing the 5 most viewed posts from this blog in 2018. All posts are not from 2018 but they have been viewed more than the others. I am using my Google Analytics stats to compile this list. So, here I present the most popular blog posts of 2018 on <a href="https://geshan.com.np" title="Geshan blog">Geshan.com.np</a>:</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/top-5-2018/everest.jpg" title="5 most viewed posts of 2018 a recap" alt="5 most viewed posts of 2018 a recap"></p>

<!-- more -->


<h2>1. <a href="https://geshan.com.np/blog/2018/12/you-can-do-it-in-sql/" title="A post on doing things in sql instead of code">You Can Do It in SQL, Stop Writing Extra Code for That</a></h2>

<p>This post was published just 10 days back but I garnered a lot of views. The post highlights:</p>

<blockquote><p>Use SQL to do math like sum, average etc. Utilize it for grouping one to many relational values like getting categories of product. Leverage SQL for string manipulation like using CONCAT_WS for concating first name and last name. Exploit SQL to sort by a custom priority formula.</p></blockquote>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/do-it-in-sql/tea-lights.jpg" title="You can do it in SQL, stop writing extra code for that" alt="You can do it in SQL, stop writing extra code for that"></p>

<h2>2. <a href="https://geshan.com.np/blog/2018/12/4-ways-docker-changed-the-way-software-engineers-work-in-past-half-decade/" title="Story about how docker has changed software engineering in past 5 years">4 Ways Docker Changed the Way Software Engineers Work in Past Half Decade</a></h2>

<p>Another post from this December that got pretty popular in past weeks. This post is about how docker has changed software engineering in the past 5 years. The post can be summarized as:</p>

<blockquote><p>With Docker, you ship the whole stack not only your code. Allocate minimum required resources to containers then scale them horizontally. With containers security generally already comes baked In. With Docker and Kubernetes you can get zero downtime and faster deployments leading to business profit.</p></blockquote>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/4-ways-docker/docker-whale.jpg" title="4 ways Docker changed the way software engineers work in past half decade" alt="4 ways Docker changed the way software engineers work in past half decade"></p>

<h2>3. <a href="https://geshan.com.np/blog/2017/05/how-to-use-docker-compose-with-virtual-hosts-and-services-like-db-for-dev-environment/" title="post on how to use docker compose with virtual hosts and shared services like a db for dev env">How to Use Docker Compose With Virtual Hosts and Shared Services (Like Db) for Dev Environment</a></h2>

<p>This is another post about Docker, it is from May 2017. This piece was also able to gather a good amount of views. The post advocates:</p>

<blockquote><p>Use docker and docker-compose with external_links to reuse services like a database across multiple projects. Using Ngnix proxy with virtual hosts can simplify multi-project setup and operation.</p></blockquote>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/docker-compose-vhost/docker-compose-vhost.jpg" title="Docker compose with vhost and shared services" alt="Docker compose with vhost and shared services"></p>

<h2>4. <a href="https://geshan.com.np/blog/2016/04/3-simple-rules-for-less-or-no-git-conflicts/" title="story about git conflicts and steps to avoid them">3 Simple Rules for Less or No Git Conflicts</a></h2>

<p>This is a post about git from 2016. It also got many hits this year probably due to some search engine traffic. Mainly the post can be summarized at</p>

<blockquote><p>Keep your changes small. Rebase your working branch with main branch often. And, review pull requests faster and merge them to main branch.</p></blockquote>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/3-rules-git-conflict/git-conflict.png" title="3 simple rules for less or no git conflicts" alt="3 simple rules for less or no git conflicts"></p>

<h2>5. <a href="https://geshan.com.np/blog/2018/10/dont-code-your-microservice-like-a-monolith/" title="post on how to write microservices to keep it maintainable">Don’t Code Your Microservice Like a Monolith, Keep It Maintainable Not Over-engineered</a></h2>

<p>This is a post from Oct this year about  Microservice and how to not code it like a Monolith. This post was also able to get some views from different sources. The post mainly advocates:</p>

<blockquote><p>Microservices are small software systems. You can safely ditch MVC. Say no to ORM and also not take the design pattern baggage for microservices. Focus on code performance, readability, and maintainability not some old rules and patterns. Those patterns were made when people were not doing microservices.</p></blockquote>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/microservice-code/lego.jpg" title="Do not code your microservice like a monolith, keep it maintainable not over-engineered" alt="Do not code your microservice like a monolith, keep it maintainable not over-engineered"></p>

<h2>Conclusion</h2>

<blockquote><p>Looks like docker has been a popular topic for this year. Probably I would blog more about it next year too. I have started cross-posting my posts to <a href="https://dev.to/geshan" title="me on dev.to">Dev.to</a> and medium publications like <a href="https://medium.freecodecamp.org/@geshan" title="my posts on freecodecamp">FreeCodeCamp</a> and <a href="https://hackernoon.com/@geshan" title="my stories on hackernoon">HackerNoon</a>. I hope these posts help more and more people.</p></blockquote>
]]></content>
  </entry>
  
</feed>
