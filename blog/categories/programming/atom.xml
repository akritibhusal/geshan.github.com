<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: programming | Geshan's Blog]]></title>
  <link href="https://geshan.com.np/blog/categories/programming/atom.xml" rel="self"/>
  <link href="https://geshan.com.np/"/>
  <updated>2019-07-10T00:10:46+00:00</updated>
  <id>https://geshan.com.np/</id>
  <author>
    <name><![CDATA[Geshan Manandhar]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Podcasts Every Software Engineer/developer Should Subscribe To - Part 4]]></title>
    <link href="https://geshan.com.np/blog/2019/07/podcasts-every-software-engineer-slash-developer-should-subscribe-to-part-4/"/>
    <updated>2019-07-08T04:58:14+00:00</updated>
    <id>https://geshan.com.np/blog/2019/07/podcasts-every-software-engineer-slash-developer-should-subscribe-to-part-4</id>
    <content type="html"><![CDATA[<p>Podcasts are a great way to learn new things even for the lazy reader. If you are not fast at reading or don&rsquo;t like it very much podcasts can be your way to get the information with less effort. It is easier than reading. This is a part 4 in the series (do check part <a href="http://geshan.com.np/blog/2015/10/3-podcasts-every-software-engineer-slash-developer-should-subscribe-to/">1</a> and
<a href="http://geshan.com.np/blog/2016/05/3-podcasts-every-software-engineer-slash-developer-should-subscribe-to-part-2/">2</a> and <a href="https://geshan.com.np/blog/2017/01/3-podcasts-every-software-engineer-slash-developer-should-subscribe-to-part-3/">3</a>) of podcasts you must subscribe to and listen to as a software engineer. Same as the last 3 times the 3 podcasts listed below have great content and considerably good sound quality too. Below is the list:</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/3-podcasts-part-4/3-podcasts-sw-eng-part-04.jpg" title="3 podcasts every software engineer should subscribe to - part 4" alt="3 podcasts every software engineer should subscribe to - part 4"></p>

<!-- more -->


<h2><a href="https://spec.fm/podcasts/developer-tea">Developer Tea by Jonathan</a></h2>

<p>Developer Tea is an exceptional podcast to listen to. Jonathan sometimes does an interview and most of the times it is a discourse on software engineering related topics. A recent episode on <a href="https://spec.fm/podcasts/developer-tea/302953">Mid-Year Resolutions</a> was a strong reminder that half of the year is gone and in less than six months we will reach 2020.</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/3-podcasts-part-4/developer-tea.jpg" title="Developer Tea Podcast" alt="Developer Tea Podcast"></p>

<h2><a href="http://agilenoir.biz/agilethoughts/">Agile Thoughts by Agile Noir</a></h2>

<p>Simply put Agile thought is an unconventional podcast. Donâ€™t be scared by the unusual looking cover of the podcast, the content is good. Mostly conversational with some characters, the episodes are short and address day to day issues. I remember episode 29 <a href="https://agilenoir.biz/podcast/029-the-value-tdd-gives-to-leadership/">The value TDD gives to leadership</a> being an intriguing one.</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/3-podcasts-part-4/agile-thoughts.jpg" title="Agile Thoughts Podcast" alt="Agile Thoughts Podcast"></p>

<h2><a href="https://www.intercom.com/blog/podcasts/">Inside Intercom</a></h2>

<p>Inside intercom is a superb podcast focusing on the product side of things rather than just the technical aspects. The most recent episode on <a href="https://www.intercom.com/blog/podcasts/josh-seiden-on-why-product-teams-should-focus-on-outcome-vs-output/">why product teams should focus on outcomes over output</a> was an eye-opener.</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/3-podcasts-part-4/inside-intercom.jpg" title="Inside Intercom Podcast" alt="Inside Intercom Podcast"></p>

<h2>Conclusion</h2>

<blockquote><p>I hope you continue your learning journey with the above interesting podcasts. Keep learning!</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3 Podcasts Every Software Engineer/developer Should Subscribe To - Part 3]]></title>
    <link href="https://geshan.com.np/blog/2017/01/3-podcasts-every-software-engineer-slash-developer-should-subscribe-to-part-3/"/>
    <updated>2017-01-04T05:47:54+00:00</updated>
    <id>https://geshan.com.np/blog/2017/01/3-podcasts-every-software-engineer-slash-developer-should-subscribe-to-part-3</id>
    <content type="html"><![CDATA[<p>Podcasts open up a new horizon for learning, it is easier than reading and you can do it while commuting. This is a part 3 in the series (do check part <a href="http://geshan.com.np/blog/2015/10/3-podcasts-every-software-engineer-slash-developer-should-subscribe-to/">1</a> and
<a href="http://geshan.com.np/blog/2016/05/3-podcasts-every-software-engineer-slash-developer-should-subscribe-to-part-2/">2</a>) of podcasts you must subscribe to and listen to as a software engineer. Same as the last 2 times the 3 podcasts listed below have superb content and amazing sound quality too. Below is the list:</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/3-podcasts-part-3/3-podcasts-sw-eng-part-03.jpg" title="3 podcasts every software engineer should subscribe to - part 3" alt="3 podcasts every software engineer should subscribe to - part 3"></p>

<!-- more -->


<h2><a href="http://www.heavybit.com/library/podcasts/to-be-continuous/">To Be Continuous by Heavybit</a></h2>

<p>This is a gem of a podcast. Hosted by Paul and Edith it has the right mix of technical and non-technical content.
Paul is the co-founder of Circle CI and Edith is the co-founder of LaunchDarkly. Together they make a great pair.
They put forward their ideas about continuous delivery and software engineering topics.
Sometimes they even bring in guests which is like a cherry on the cake. The last episode #28 on <a href="http://www.heavybit.com/library/podcasts/to-be-continuous/ep-28-goal-setting/">Goal setting</a> was amazing.</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/3-podcasts-part-3/to-be-continuous.jpg" title="To Be Continuous Podcast" alt="To Be Continuous Podcast"></p>

<h2><a href="http://www.gistia.com/techpeople/">Tech People by Gistia Labs</a></h2>

<p>In-depth interviews is what tech people by Gistia Labs podcast excels on. They bring in leaders from the
tech industry to discuss topics from Angular in the enterprise to UX for Lean startup.
The interviews are a bit long, still they are insightful and relay important information.</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/3-podcasts-part-3/tech-people.jpg" title="Tech People Podcast" alt="Tech People Podcast"></p>

<h2><a href="https://mixergy.com/interviews/">Mixergy by Andrew</a></h2>

<p>Another admirable podcast is Mixergy hosted by <a href="http://www.andrewwarner.com/">Andrew Warner</a>.
With over a 1000 interviews with proven entrepreneurs, he knows how to ask the right questions.
Andrew sometimes elicits such insightful information out of his guest. It is intriguing how he does it.
If you ever want to learn how to interview people this is one podcast you can&rsquo;t afford do miss.
He generally interviews tech entrepreneurs. The interviews usually last like an hour.
You even as a software engineer get to know important things about how to run a business.</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/3-podcasts-part-3/mixergy.jpg" title="Mixergy Podcast" alt="Mixergy Podcast"></p>

<blockquote><p>I hope you had a great start to the new year and continue your learning listening to amazing podcasts. Cheers!</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3 Podcasts Every Software Engineer/developer Should Subscribe To - Part 2]]></title>
    <link href="https://geshan.com.np/blog/2016/05/3-podcasts-every-software-engineer-slash-developer-should-subscribe-to-part-2/"/>
    <updated>2016-05-03T05:29:42+00:00</updated>
    <id>https://geshan.com.np/blog/2016/05/3-podcasts-every-software-engineer-slash-developer-should-subscribe-to-part-2</id>
    <content type="html"><![CDATA[<p>Listening to podcasts is a good way to learn new things. Like the last <a href="http://geshan.com.np/blog/2015/10/3-podcasts-every-software-engineer-slash-developer-should-subscribe-to/">time</a>, I have found some more podcasts
with amazing content and sound quality. In this post, I will list 3 awesome podcasts.
All software engineers/developers should subscribe to them now.</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/3-podcasts-part-2/3-podcasts-sw-eng-part-02.jpg" title="3 podcasts every software engineer should subscribe to - part 2" alt="3 podcasts every software engineer should subscribe to - part 2">
(Background image shot by me)</p>

<!-- more -->


<h2><a href="http://softwareengineeringdaily.com/category/podcast/">Software Engineering Daily</a></h2>

<p>Software engineering daily is a daily podcast hosted by <a href="http://jeffmeyerson.com/">Jeff Meyerson</a>.<br/>
He has worked at Amazon and knows what he is talking about. T
he interviews are in-depth, long and enjoyable. Jeff is sharp, there is never a
dull moment in the one to one interviews he conducts. He covers a wide range of subjects from docker/kubernates
to logging and git.</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/3-podcasts-part-2/software-engineering-daily-podcast.jpg" title="Software Engineering Daily podcast" alt="Software Engineering Daily podcast"></p>

<h2><a href="https://scaleyourcode.com/interviews">Scale your code</a></h2>

<p>Christophe Limpalair hosts Scale your code podcast. A new episode usually arrives every 15 days. He also interviews known
tech personalities. The podcast covers a wide array of topics from open source to performance. This podcast informs
how the big players deal with scaling and performance problems.</p>

<blockquote><p>Scale Your Code&rsquo;s mission is to organize the world&rsquo;s programming knowledge from top sources and make it universally
accessible to improve software security, speed, and reliability.</p></blockquote>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/3-podcasts-part-2/scale-your-code-podcast.jpg" title="Scale your code podcast" alt="Scale your code podcast"></p>

<h2><a href="http://www.scrum-master-toolbox.com/category/podcast/">Scurm Master Toolbox</a></h2>

<p>Scrum master toolbox podcast is another daily podcast with a theme for each weekday. Vasco Duarte hosts this podcast.
He conducts the interviews with ease and a purpose to get the best out of his guests. Regardless of you do scrum or not
this will help you in your career. Software engineers are solution providers. Understanding team dynamics, product
management and change management is important in our work life.</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/3-podcasts-part-2/scrum-master-toolbox-podcast.jpg" title="Scurm Master Toolbox podcast" alt="Scurm Master Toolbox podcast"></p>

<blockquote><p>For this time it was all podcasts with one on one interviews. Hope you like them and it helps you expand your tech horizon.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[There are only two types of automated software tests, fast ones and not fast ones]]></title>
    <link href="https://geshan.com.np/blog/2016/03/there-are-only-two-types-of-automated-software-tests/"/>
    <updated>2016-03-17T05:38:18+00:00</updated>
    <id>https://geshan.com.np/blog/2016/03/there-are-only-two-types-of-automated-software-tests</id>
    <content type="html"><![CDATA[<p>Tests check that the code does what it is expected to do. It also gives confidence to the software engineer that the code
works as intended. This equates to less or no bugs in the software. You must have heard about lots of types of automated software tests.
There is unit testing, integration testing, functional testing, acceptance testing, smoke testing etc.
As per Guru99&rsquo;s <a href="http://www.guru99.com/types-of-software-testing.html">post</a> there are more than 100 types of
software testing. In this post I am going to categorize automated software tests into two, the fast ones and not fast ones.</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/testing-types/software-testing.jpg" title="There are only two types of automated software tests, fast ones and not fast ones" alt="There are only two types of automated software tests, fast ones and not fast ones"></p>

<!-- more -->


<h3>How do you distinguish between slow and fast tests?</h3>

<p>Generally, if your whole tests suite runs in seconds it is fast.
If your whole test suite runs in minutes/hour it is slow. To make your tests small you need to make your application small.
As faster tests running on your Continuous Integration (CI) service will give you faster feedback.
May be it is time to go micro-services?</p>

<p>Lets discuss the more about fast and not fast (slow) automated software tests.</p>

<h3>The fast tests</h3>

<p>Fast tests are code that test one unit of code generally a method. Unit test is a type of fast test.
They don&rsquo;t depend on any external dependencies. External dependencies include file system, database, web server, network
or any third party API or service. Unit tests even mock the other code elements they need like other classes and its methods.
This makes the test focused on one unit and they run in milliseconds/seconds not minutes. A simple example is below:</p>

<script src="http://gist-it.appspot.com/http://github.com/geshan/dataprovider-example/blob/master/tests/DataProvider/Example/Test/CheckoutTest.php"></script>


<p>You can view the full code <a href="http://github.com/geshan/dataprovider-example">here</a>, yes it is a simple class with no code or external dependency.</p>

<p>Some integration tests can also be fast tests. These integration tests can test many classes. They should not
dependent on any external dependencies mentioned above to obtain speed. So these tests will still run in seconds and
not take minutes to finish.</p>

<h3>The not fast tests (slow ones)</h3>

<p>Any test that takes long to run are not fast tests (slow tests). Generally, these type of tests need to load
the whole application to test it. These types of tests depend on external dependencies. External dependencies include file
system, database, web server, network, third party API or service.</p>

<p>Acceptance tests that need to load a full web application on a browser is a type of slow tests. Even smoke tests if it needs
to load the whole application and takes long time to execute fall in this category.</p>

<script src="https://gist.github.com/geshan/4512326704954f6b8388.js"></script>


<p>The above example is taken from <a href="https://github.com/Sylius/Sylius/blob/master/features/checkout/checkout_with_offline_payment.feature">Sylius</a>
project, to test checkout with offline payment method on the browser.</p>

<h3>Conclusion</h3>

<p>Testing is super important for a robust software application. Automated testing + CI is one of the <a href="http://geshan.com.np/blog/2015/10/4-pillars-of-a-solid-software-application-and-tools-to-support-it/">four pillars</a>
of any solid software application. Happy testing hope your tests run in seconds not minutes.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[10 software engineering proverbs/quotes I wrote in the past months]]></title>
    <link href="https://geshan.com.np/blog/2016/03/10-software-engineering-proverbs-slash-quotes-i-wrote-in-the-past-months/"/>
    <updated>2016-03-14T11:30:20+00:00</updated>
    <id>https://geshan.com.np/blog/2016/03/10-software-engineering-proverbs-slash-quotes-i-wrote-in-the-past-months</id>
    <content type="html"><![CDATA[<p>In the past months, I was tweeting some insightful and enlightening software engineering proverbs. Like the one below</p>

<blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">There is no pill to convert yourself as a good <a href="https://twitter.com/hashtag/programmer?src=hash">#programmer</a>, it takes lots of reading, learning and practice. So start now :) <a href="https://twitter.com/hashtag/code?src=hash">#code</a> <a href="https://twitter.com/hashtag/software?src=hash">#software</a></p>&mdash; Geshan Manandhar (@geshan) <a href="https://twitter.com/geshan/status/707796907582726145">March 10, 2016</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>I browsed through my twitter timeline and collected them in one place.</p>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/10-quotes/code-html-small.jpg" title="10 software engineering proverbs-quotes I came up with in past months" alt="10 software engineering proverbs-quotes I came up with in past months"></p>

<h2>Here are the quotes with visuals :</h2>

<!-- more -->


<hr />

<h3>There is no pill to convert yourself as a good programmer, it takes lots of reading, learning and practice. So start now.</h3>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/10-quotes/01pills.jpg" title="There is no pill to convert yourself as a good programmer, it takes lots of reading, learning and practice. So start now." alt="There is no pill to convert yourself as a good programmer, it takes lots of reading, learning and practice. So start now."></p>

<hr />

<h3>An open pull request (PR) is a liability in at least 2 ways. 1 it&rsquo;s a feature/fix not shipped to customers. 2 it will invite code conflicts soon.</h3>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/10-quotes/02PR.jpg" title="An open pull request is a liability in at least 2 ways. 1 it is a feature-fix not shipped to customers. 2 it will invite code conflicts soon." alt="An open pull request is a liability in at least 2 ways. 1 it is a feature-fix not shipped to customers. 2 it will invite code conflicts soon."></p>

<hr />

<h3>Talking about automated testing and Continuous Integration(CI) is easy, balancing it with delivery and cost as a web shop manager is hard.</h3>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/10-quotes/03test-ci-balance.jpg" title="Talking about automated testing and Continuous Integration(CI) is easy, balancing it with delivery and cost as a web shop manager is hard." alt="Talking about automated testing and Continuous Integration(CI) is easy, balancing it with delivery and cost as a web shop manager is hard."></p>

<hr />

<h3>Having automated tests but no Continuous Integration(CI) is like having a sword but letting it rot.</h3>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/10-quotes/04test-ci-sword.jpg" title="Having automated tests but no Continuous Integration(CI) is like having a sword but letting it rot." alt="Having automated tests but no Continuous Integration(CI) is like having a sword but letting it rot."></p>

<hr />

<h3>You cannot follow everything by the book. It&rsquo;s generally an ish implementation like Agileish, Kanbanish and RESTish.</h3>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/10-quotes/05follow-book.jpg" title="You cannot follow everything by the book. It is generally an ish implementation like agileish, kanbanish and RESTish." alt="You cannot follow everything by the book. It is generally an ish implementation like agileish, kanbanish and RESTish."></p>

<hr />

<h3>If you are thinking of a software product idea, make a pain killer people can&rsquo;t live without not an optional vitamin people can and will skip.</h3>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/10-quotes/06pain-killer.jpg" title="If you are thinking of a software product idea, make a pain killer people can not live without not an optional vitamin people can and will skip." alt="If you are thinking of a software product idea, make a pain killer people can not live without not an optional vitamin people can and will skip."></p>

<hr />

<h3>Software engineers have power to create great solutions but the best software to solve the least important problem is of no use.</h3>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/10-quotes/07solution-importance.jpg" title="Software engineers have power to create great solutions but the best software to solve the least important problem is of no use." alt="Software engineers have power to create great solutions but the best software to solve the least important problem is of no use."></p>

<hr />

<h3>Programmers/developers need to become software engineers. Think of solution then technology to implement it. Think of abstractions then code.</h3>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/10-quotes/08solution-abstract.jpg" title="Programmers-developers need to become software engineers. Think of solution then technology to implement it. Think of abstractions then code." alt="Programmers-developers need to become software engineers. Think of solution then technology to implement it. Think of abstractions then code."></p>

<hr />

<h3>Software developers are solution providers first, engineers second. Solution should have business value than using the latest tech fad.</h3>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/10-quotes/09solution-value.jpg" title="Software developers are solution providers first, engineers second. Solution should have business value than using the latest tech fad." alt="Software developers are solution providers first, engineers second. Solution should have business value than using the latest tech fad."></p>

<hr />

<h3>If you don&rsquo;t sharpen your axe then it will take more time and effort to cut the tree. Same goes for software development.</h3>

<p><img class="center" src="https://geshan.com.np/images/generic/loading.gif" data-echo="/images/10-quotes/10axe.jpg" title="If you don't sharpen your axe then it will take more time and effort to cut the tree. Same goes for software development." alt="If you don't sharpen your axe then it will take more time and effort to cut the tree. Same goes for software development."></p>

<hr />

<h3>Disclaimer</h3>

<p>Not all of the above quotes are created by me, some of them are inspired/adapted from things I read online and podcasts I listen to. Thanks.</p>
]]></content>
  </entry>
  
</feed>
